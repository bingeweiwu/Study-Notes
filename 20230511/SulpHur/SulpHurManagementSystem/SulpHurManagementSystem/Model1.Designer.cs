//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_AssemblyLink_AssemblyInfo", "AssemblyInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.AssemblyInfo), "AssemblyLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.AssemblyLink), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_AssemblyLink_UIContents", "UIContent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.UIContent), "AssemblyLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.AssemblyLink), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_BugLink_UIContents", "UIContent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.UIContent), "BugLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.BugLink), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_UIContents_BuildInfo", "BuildInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.BuildInfo), "UIContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.UIContent), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_UIContents_Clients", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.Client), "UIContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.UIContent), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_Results_Rules", "Rule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.Rule), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.Result), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_Results_UIContents", "UIContent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.UIContent), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.Result), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_RuleStatus_Rules", "Rule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.Rule), "RuleStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.RuleStatu), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_RuleStatus_UIContents", "UIContent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.UIContent), "RuleStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.RuleStatu), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_LogException_BuildInfo", "BuildInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.BuildInfo), "LogException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.LogException), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_LogException_Clients", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SulpHurManagementSystem.Client), "LogException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.LogException), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_bug_surface_bugs", "bug", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SulpHurManagementSystem.bug), "bug_surface", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.bug_surface), true)]
[assembly: EdmRelationshipAttribute("SulpHurModel", "FK_bug_surface_surfaces", "surface", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SulpHurManagementSystem.surface), "bug_surface", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SulpHurManagementSystem.bug_surface), true)]

#endregion

namespace SulpHurManagementSystem
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SulpHurEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SulpHurEntities object using the connection string found in the 'SulpHurEntities' section of the application configuration file.
        /// </summary>
        public SulpHurEntities() : base("name=SulpHurEntities", "SulpHurEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SulpHurEntities object.
        /// </summary>
        public SulpHurEntities(string connectionString) : base(connectionString, "SulpHurEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SulpHurEntities object.
        /// </summary>
        public SulpHurEntities(EntityConnection connection) : base(connection, "SulpHurEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssemblyInfo> AssemblyInfoes
        {
            get
            {
                if ((_AssemblyInfoes == null))
                {
                    _AssemblyInfoes = base.CreateObjectSet<AssemblyInfo>("AssemblyInfoes");
                }
                return _AssemblyInfoes;
            }
        }
        private ObjectSet<AssemblyInfo> _AssemblyInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssemblyLink> AssemblyLinks
        {
            get
            {
                if ((_AssemblyLinks == null))
                {
                    _AssemblyLinks = base.CreateObjectSet<AssemblyLink>("AssemblyLinks");
                }
                return _AssemblyLinks;
            }
        }
        private ObjectSet<AssemblyLink> _AssemblyLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BugLink> BugLinks
        {
            get
            {
                if ((_BugLinks == null))
                {
                    _BugLinks = base.CreateObjectSet<BugLink>("BugLinks");
                }
                return _BugLinks;
            }
        }
        private ObjectSet<BugLink> _BugLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildInfo> BuildInfoes
        {
            get
            {
                if ((_BuildInfoes == null))
                {
                    _BuildInfoes = base.CreateObjectSet<BuildInfo>("BuildInfoes");
                }
                return _BuildInfoes;
            }
        }
        private ObjectSet<BuildInfo> _BuildInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rule> Rules
        {
            get
            {
                if ((_Rules == null))
                {
                    _Rules = base.CreateObjectSet<Rule>("Rules");
                }
                return _Rules;
            }
        }
        private ObjectSet<Rule> _Rules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleStatu> RuleStatus
        {
            get
            {
                if ((_RuleStatus == null))
                {
                    _RuleStatus = base.CreateObjectSet<RuleStatu>("RuleStatus");
                }
                return _RuleStatus;
            }
        }
        private ObjectSet<RuleStatu> _RuleStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UIContent> UIContents
        {
            get
            {
                if ((_UIContents == null))
                {
                    _UIContents = base.CreateObjectSet<UIContent>("UIContents");
                }
                return _UIContents;
            }
        }
        private ObjectSet<UIContent> _UIContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogException> LogExceptions
        {
            get
            {
                if ((_LogExceptions == null))
                {
                    _LogExceptions = base.CreateObjectSet<LogException>("LogExceptions");
                }
                return _LogExceptions;
            }
        }
        private ObjectSet<LogException> _LogExceptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<bug> bugs
        {
            get
            {
                if ((_bugs == null))
                {
                    _bugs = base.CreateObjectSet<bug>("bugs");
                }
                return _bugs;
            }
        }
        private ObjectSet<bug> _bugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<surface> surfaces
        {
            get
            {
                if ((_surfaces == null))
                {
                    _surfaces = base.CreateObjectSet<surface>("surfaces");
                }
                return _surfaces;
            }
        }
        private ObjectSet<surface> _surfaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<bug_surface> bug_surface
        {
            get
            {
                if ((_bug_surface == null))
                {
                    _bug_surface = base.CreateObjectSet<bug_surface>("bug_surface");
                }
                return _bug_surface;
            }
        }
        private ObjectSet<bug_surface> _bug_surface;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssemblyInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssemblyInfoes(AssemblyInfo assemblyInfo)
        {
            base.AddObject("AssemblyInfoes", assemblyInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssemblyLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssemblyLinks(AssemblyLink assemblyLink)
        {
            base.AddObject("AssemblyLinks", assemblyLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BugLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBugLinks(BugLink bugLink)
        {
            base.AddObject("BugLinks", bugLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildInfoes(BuildInfo buildInfo)
        {
            base.AddObject("BuildInfoes", buildInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRules(Rule rule)
        {
            base.AddObject("Rules", rule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleStatus(RuleStatu ruleStatu)
        {
            base.AddObject("RuleStatus", ruleStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UIContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUIContents(UIContent uIContent)
        {
            base.AddObject("UIContents", uIContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogExceptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogExceptions(LogException logException)
        {
            base.AddObject("LogExceptions", logException);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the bugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobugs(bug bug)
        {
            base.AddObject("bugs", bug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the surfaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosurfaces(surface surface)
        {
            base.AddObject("surfaces", surface);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the bug_surface EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobug_surface(bug_surface bug_surface)
        {
            base.AddObject("bug_surface", bug_surface);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="AssemblyInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssemblyInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssemblyInfo object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="assemblyName">Initial value of the AssemblyName property.</param>
        /// <param name="fullTypeName">Initial value of the FullTypeName property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static AssemblyInfo CreateAssemblyInfo(global::System.Int32 typeID, global::System.String assemblyName, global::System.String fullTypeName, global::System.String typeName)
        {
            AssemblyInfo assemblyInfo = new AssemblyInfo();
            assemblyInfo.TypeID = typeID;
            assemblyInfo.AssemblyName = assemblyName;
            assemblyInfo.FullTypeName = fullTypeName;
            assemblyInfo.TypeName = typeName;
            return assemblyInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value, "TypeID");
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, false, "AssemblyName");
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullTypeName
        {
            get
            {
                return _FullTypeName;
            }
            set
            {
                OnFullTypeNameChanging(value);
                ReportPropertyChanging("FullTypeName");
                _FullTypeName = StructuralObject.SetValidValue(value, false, "FullTypeName");
                ReportPropertyChanged("FullTypeName");
                OnFullTypeNameChanged();
            }
        }
        private global::System.String _FullTypeName;
        partial void OnFullTypeNameChanging(global::System.String value);
        partial void OnFullTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false, "TypeName");
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_AssemblyLink_AssemblyInfo", "AssemblyLink")]
        public EntityCollection<AssemblyLink> AssemblyLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssemblyLink>("SulpHurModel.FK_AssemblyLink_AssemblyInfo", "AssemblyLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssemblyLink>("SulpHurModel.FK_AssemblyLink_AssemblyInfo", "AssemblyLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="AssemblyLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssemblyLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssemblyLink object.
        /// </summary>
        /// <param name="assemblyLinkID">Initial value of the AssemblyLinkID property.</param>
        /// <param name="contentID">Initial value of the ContentID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="isPageIdentifier">Initial value of the IsPageIdentifier property.</param>
        public static AssemblyLink CreateAssemblyLink(global::System.Int32 assemblyLinkID, global::System.Int32 contentID, global::System.Int32 typeID, global::System.Boolean isPageIdentifier)
        {
            AssemblyLink assemblyLink = new AssemblyLink();
            assemblyLink.AssemblyLinkID = assemblyLinkID;
            assemblyLink.ContentID = contentID;
            assemblyLink.TypeID = typeID;
            assemblyLink.IsPageIdentifier = isPageIdentifier;
            return assemblyLink;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssemblyLinkID
        {
            get
            {
                return _AssemblyLinkID;
            }
            set
            {
                if (_AssemblyLinkID != value)
                {
                    OnAssemblyLinkIDChanging(value);
                    ReportPropertyChanging("AssemblyLinkID");
                    _AssemblyLinkID = StructuralObject.SetValidValue(value, "AssemblyLinkID");
                    ReportPropertyChanged("AssemblyLinkID");
                    OnAssemblyLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _AssemblyLinkID;
        partial void OnAssemblyLinkIDChanging(global::System.Int32 value);
        partial void OnAssemblyLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value, "ContentID");
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, "TypeID");
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPageIdentifier
        {
            get
            {
                return _IsPageIdentifier;
            }
            set
            {
                OnIsPageIdentifierChanging(value);
                ReportPropertyChanging("IsPageIdentifier");
                _IsPageIdentifier = StructuralObject.SetValidValue(value, "IsPageIdentifier");
                ReportPropertyChanged("IsPageIdentifier");
                OnIsPageIdentifierChanged();
            }
        }
        private global::System.Boolean _IsPageIdentifier;
        partial void OnIsPageIdentifierChanging(global::System.Boolean value);
        partial void OnIsPageIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Reserve1
        {
            get
            {
                return _Reserve1;
            }
            set
            {
                OnReserve1Changing(value);
                ReportPropertyChanging("Reserve1");
                _Reserve1 = StructuralObject.SetValidValue(value, "Reserve1");
                ReportPropertyChanged("Reserve1");
                OnReserve1Changed();
            }
        }
        private Nullable<global::System.Int32> _Reserve1;
        partial void OnReserve1Changing(Nullable<global::System.Int32> value);
        partial void OnReserve1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reserve2
        {
            get
            {
                return _Reserve2;
            }
            set
            {
                OnReserve2Changing(value);
                ReportPropertyChanging("Reserve2");
                _Reserve2 = StructuralObject.SetValidValue(value, true, "Reserve2");
                ReportPropertyChanged("Reserve2");
                OnReserve2Changed();
            }
        }
        private global::System.String _Reserve2;
        partial void OnReserve2Changing(global::System.String value);
        partial void OnReserve2Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_AssemblyLink_AssemblyInfo", "AssemblyInfo")]
        public AssemblyInfo AssemblyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssemblyInfo>("SulpHurModel.FK_AssemblyLink_AssemblyInfo", "AssemblyInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssemblyInfo>("SulpHurModel.FK_AssemblyLink_AssemblyInfo", "AssemblyInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssemblyInfo> AssemblyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssemblyInfo>("SulpHurModel.FK_AssemblyLink_AssemblyInfo", "AssemblyInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssemblyInfo>("SulpHurModel.FK_AssemblyLink_AssemblyInfo", "AssemblyInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_AssemblyLink_UIContents", "UIContent")]
        public UIContent UIContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_AssemblyLink_UIContents", "UIContent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_AssemblyLink_UIContents", "UIContent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UIContent> UIContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_AssemblyLink_UIContents", "UIContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UIContent>("SulpHurModel.FK_AssemblyLink_UIContents", "UIContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="bug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class bug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new bug object.
        /// </summary>
        /// <param name="bug_id">Initial value of the bug_id property.</param>
        /// <param name="status">Initial value of the status property.</param>
        public static bug Createbug(global::System.Int32 bug_id, global::System.Int16 status)
        {
            bug bug = new bug();
            bug.bug_id = bug_id;
            bug.status = status;
            return bug;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bug_id
        {
            get
            {
                return _bug_id;
            }
            set
            {
                if (_bug_id != value)
                {
                    Onbug_idChanging(value);
                    ReportPropertyChanging("bug_id");
                    _bug_id = StructuralObject.SetValidValue(value, "bug_id");
                    ReportPropertyChanged("bug_id");
                    Onbug_idChanged();
                }
            }
        }
        private global::System.Int32 _bug_id;
        partial void Onbug_idChanging(global::System.Int32 value);
        partial void Onbug_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, "status");
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.Int16 _status;
        partial void OnstatusChanging(global::System.Int16 value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true, "title");
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String repro
        {
            get
            {
                return _repro;
            }
            set
            {
                OnreproChanging(value);
                ReportPropertyChanging("repro");
                _repro = StructuralObject.SetValidValue(value, true, "repro");
                ReportPropertyChanged("repro");
                OnreproChanged();
            }
        }
        private global::System.String _repro;
        partial void OnreproChanging(global::System.String value);
        partial void OnreproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String assigned_to
        {
            get
            {
                return _assigned_to;
            }
            set
            {
                Onassigned_toChanging(value);
                ReportPropertyChanging("assigned_to");
                _assigned_to = StructuralObject.SetValidValue(value, true, "assigned_to");
                ReportPropertyChanged("assigned_to");
                Onassigned_toChanged();
            }
        }
        private global::System.String _assigned_to;
        partial void Onassigned_toChanging(global::System.String value);
        partial void Onassigned_toChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> priority
        {
            get
            {
                return _priority;
            }
            set
            {
                OnpriorityChanging(value);
                ReportPropertyChanging("priority");
                _priority = StructuralObject.SetValidValue(value, "priority");
                ReportPropertyChanged("priority");
                OnpriorityChanged();
            }
        }
        private Nullable<global::System.Int16> _priority;
        partial void OnpriorityChanging(Nullable<global::System.Int16> value);
        partial void OnpriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> severity
        {
            get
            {
                return _severity;
            }
            set
            {
                OnseverityChanging(value);
                ReportPropertyChanging("severity");
                _severity = StructuralObject.SetValidValue(value, "severity");
                ReportPropertyChanged("severity");
                OnseverityChanged();
            }
        }
        private Nullable<global::System.Int16> _severity;
        partial void OnseverityChanging(Nullable<global::System.Int16> value);
        partial void OnseverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issue_type
        {
            get
            {
                return _issue_type;
            }
            set
            {
                Onissue_typeChanging(value);
                ReportPropertyChanging("issue_type");
                _issue_type = StructuralObject.SetValidValue(value, true, "issue_type");
                ReportPropertyChanged("issue_type");
                Onissue_typeChanged();
            }
        }
        private global::System.String _issue_type;
        partial void Onissue_typeChanging(global::System.String value);
        partial void Onissue_typeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_bug_surface_bugs", "bug_surface")]
        public EntityCollection<bug_surface> bug_surface
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<bug_surface>("SulpHurModel.FK_bug_surface_bugs", "bug_surface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<bug_surface>("SulpHurModel.FK_bug_surface_bugs", "bug_surface", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="bug_surface")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class bug_surface : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new bug_surface object.
        /// </summary>
        /// <param name="sb_id">Initial value of the sb_id property.</param>
        public static bug_surface Createbug_surface(global::System.Int32 sb_id)
        {
            bug_surface bug_surface = new bug_surface();
            bug_surface.sb_id = sb_id;
            return bug_surface;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> s_id
        {
            get
            {
                return _s_id;
            }
            set
            {
                Ons_idChanging(value);
                ReportPropertyChanging("s_id");
                _s_id = StructuralObject.SetValidValue(value, "s_id");
                ReportPropertyChanged("s_id");
                Ons_idChanged();
            }
        }
        private Nullable<global::System.Int32> _s_id;
        partial void Ons_idChanging(Nullable<global::System.Int32> value);
        partial void Ons_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bug_id
        {
            get
            {
                return _bug_id;
            }
            set
            {
                Onbug_idChanging(value);
                ReportPropertyChanging("bug_id");
                _bug_id = StructuralObject.SetValidValue(value, "bug_id");
                ReportPropertyChanged("bug_id");
                Onbug_idChanged();
            }
        }
        private Nullable<global::System.Int32> _bug_id;
        partial void Onbug_idChanging(Nullable<global::System.Int32> value);
        partial void Onbug_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sb_id
        {
            get
            {
                return _sb_id;
            }
            set
            {
                if (_sb_id != value)
                {
                    Onsb_idChanging(value);
                    ReportPropertyChanging("sb_id");
                    _sb_id = StructuralObject.SetValidValue(value, "sb_id");
                    ReportPropertyChanged("sb_id");
                    Onsb_idChanged();
                }
            }
        }
        private global::System.Int32 _sb_id;
        partial void Onsb_idChanging(global::System.Int32 value);
        partial void Onsb_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_bug_surface_bugs", "bug")]
        public bug bugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bug>("SulpHurModel.FK_bug_surface_bugs", "bug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bug>("SulpHurModel.FK_bug_surface_bugs", "bug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bug> bugsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bug>("SulpHurModel.FK_bug_surface_bugs", "bug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bug>("SulpHurModel.FK_bug_surface_bugs", "bug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_bug_surface_surfaces", "surface")]
        public surface surfaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<surface>("SulpHurModel.FK_bug_surface_surfaces", "surface").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<surface>("SulpHurModel.FK_bug_surface_surfaces", "surface").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<surface> surfacesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<surface>("SulpHurModel.FK_bug_surface_surfaces", "surface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<surface>("SulpHurModel.FK_bug_surface_surfaces", "surface", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="BugLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BugLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BugLink object.
        /// </summary>
        /// <param name="bugLinkID">Initial value of the BugLinkID property.</param>
        /// <param name="contentID">Initial value of the ContentID property.</param>
        /// <param name="bugID">Initial value of the BugID property.</param>
        public static BugLink CreateBugLink(global::System.Int32 bugLinkID, global::System.Int32 contentID, global::System.Int32 bugID)
        {
            BugLink bugLink = new BugLink();
            bugLink.BugLinkID = bugLinkID;
            bugLink.ContentID = contentID;
            bugLink.BugID = bugID;
            return bugLink;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BugLinkID
        {
            get
            {
                return _BugLinkID;
            }
            set
            {
                if (_BugLinkID != value)
                {
                    OnBugLinkIDChanging(value);
                    ReportPropertyChanging("BugLinkID");
                    _BugLinkID = StructuralObject.SetValidValue(value, "BugLinkID");
                    ReportPropertyChanged("BugLinkID");
                    OnBugLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _BugLinkID;
        partial void OnBugLinkIDChanging(global::System.Int32 value);
        partial void OnBugLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value, "ContentID");
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BugID
        {
            get
            {
                return _BugID;
            }
            set
            {
                OnBugIDChanging(value);
                ReportPropertyChanging("BugID");
                _BugID = StructuralObject.SetValidValue(value, "BugID");
                ReportPropertyChanged("BugID");
                OnBugIDChanged();
            }
        }
        private global::System.Int32 _BugID;
        partial void OnBugIDChanging(global::System.Int32 value);
        partial void OnBugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                OnGUIDChanging(value);
                ReportPropertyChanging("GUID");
                _GUID = StructuralObject.SetValidValue(value, "GUID");
                ReportPropertyChanged("GUID");
                OnGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _GUID;
        partial void OnGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnGUIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_BugLink_UIContents", "UIContent")]
        public UIContent UIContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_BugLink_UIContents", "UIContent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_BugLink_UIContents", "UIContent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UIContent> UIContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_BugLink_UIContents", "UIContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UIContent>("SulpHurModel.FK_BugLink_UIContents", "UIContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="BuildInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildInfo object.
        /// </summary>
        /// <param name="buildID">Initial value of the BuildID property.</param>
        /// <param name="buildNo">Initial value of the BuildNo property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static BuildInfo CreateBuildInfo(global::System.Int32 buildID, global::System.String buildNo, global::System.DateTime dateCreated)
        {
            BuildInfo buildInfo = new BuildInfo();
            buildInfo.BuildID = buildID;
            buildInfo.BuildNo = buildNo;
            buildInfo.DateCreated = dateCreated;
            return buildInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildID
        {
            get
            {
                return _BuildID;
            }
            set
            {
                if (_BuildID != value)
                {
                    OnBuildIDChanging(value);
                    ReportPropertyChanging("BuildID");
                    _BuildID = StructuralObject.SetValidValue(value, "BuildID");
                    ReportPropertyChanged("BuildID");
                    OnBuildIDChanged();
                }
            }
        }
        private global::System.Int32 _BuildID;
        partial void OnBuildIDChanging(global::System.Int32 value);
        partial void OnBuildIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuildNo
        {
            get
            {
                return _BuildNo;
            }
            set
            {
                OnBuildNoChanging(value);
                ReportPropertyChanging("BuildNo");
                _BuildNo = StructuralObject.SetValidValue(value, false, "BuildNo");
                ReportPropertyChanged("BuildNo");
                OnBuildNoChanged();
            }
        }
        private global::System.String _BuildNo;
        partial void OnBuildNoChanging(global::System.String value);
        partial void OnBuildNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true, "Language");
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_UIContents_BuildInfo", "UIContent")]
        public EntityCollection<UIContent> UIContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UIContent>("SulpHurModel.FK_UIContents_BuildInfo", "UIContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UIContent>("SulpHurModel.FK_UIContents_BuildInfo", "UIContent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_LogException_BuildInfo", "LogException")]
        public EntityCollection<LogException> LogExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogException>("SulpHurModel.FK_LogException_BuildInfo", "LogException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogException>("SulpHurModel.FK_LogException_BuildInfo", "LogException", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="macAddress">Initial value of the MacAddress property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Client CreateClient(global::System.Int32 clientID, global::System.String userName, global::System.String macAddress, global::System.DateTime dateCreated)
        {
            Client client = new Client();
            client.ClientID = clientID;
            client.UserName = userName;
            client.MacAddress = macAddress;
            client.DateCreated = dateCreated;
            return client;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                if (_ClientID != value)
                {
                    OnClientIDChanging(value);
                    ReportPropertyChanging("ClientID");
                    _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                    ReportPropertyChanged("ClientID");
                    OnClientIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, true, "MachineName");
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, true, "IPAddress");
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSLanguage
        {
            get
            {
                return _OSLanguage;
            }
            set
            {
                OnOSLanguageChanging(value);
                ReportPropertyChanging("OSLanguage");
                _OSLanguage = StructuralObject.SetValidValue(value, true, "OSLanguage");
                ReportPropertyChanged("OSLanguage");
                OnOSLanguageChanged();
            }
        }
        private global::System.String _OSLanguage;
        partial void OnOSLanguageChanging(global::System.String value);
        partial void OnOSLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSType
        {
            get
            {
                return _OSType;
            }
            set
            {
                OnOSTypeChanging(value);
                ReportPropertyChanging("OSType");
                _OSType = StructuralObject.SetValidValue(value, true, "OSType");
                ReportPropertyChanged("OSType");
                OnOSTypeChanged();
            }
        }
        private global::System.String _OSType;
        partial void OnOSTypeChanging(global::System.String value);
        partial void OnOSTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MacAddress
        {
            get
            {
                return _MacAddress;
            }
            set
            {
                OnMacAddressChanging(value);
                ReportPropertyChanging("MacAddress");
                _MacAddress = StructuralObject.SetValidValue(value, false, "MacAddress");
                ReportPropertyChanged("MacAddress");
                OnMacAddressChanged();
            }
        }
        private global::System.String _MacAddress;
        partial void OnMacAddressChanging(global::System.String value);
        partial void OnMacAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_UIContents_Clients", "UIContent")]
        public EntityCollection<UIContent> UIContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UIContent>("SulpHurModel.FK_UIContents_Clients", "UIContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UIContent>("SulpHurModel.FK_UIContents_Clients", "UIContent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_LogException_Clients", "LogException")]
        public EntityCollection<LogException> LogExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogException>("SulpHurModel.FK_LogException_Clients", "LogException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogException>("SulpHurModel.FK_LogException_Clients", "LogException", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="threeLetterWindowsLanguageName">Initial value of the ThreeLetterWindowsLanguageName property.</param>
        /// <param name="onlyClient">Initial value of the OnlyClient property.</param>
        public static Language CreateLanguage(global::System.Int32 languageID, global::System.String threeLetterWindowsLanguageName, global::System.Boolean onlyClient)
        {
            Language language = new Language();
            language.LanguageID = languageID;
            language.ThreeLetterWindowsLanguageName = threeLetterWindowsLanguageName;
            language.OnlyClient = onlyClient;
            return language;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value, "LanguageID");
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ThreeLetterWindowsLanguageName
        {
            get
            {
                return _ThreeLetterWindowsLanguageName;
            }
            set
            {
                OnThreeLetterWindowsLanguageNameChanging(value);
                ReportPropertyChanging("ThreeLetterWindowsLanguageName");
                _ThreeLetterWindowsLanguageName = StructuralObject.SetValidValue(value, false, "ThreeLetterWindowsLanguageName");
                ReportPropertyChanged("ThreeLetterWindowsLanguageName");
                OnThreeLetterWindowsLanguageNameChanged();
            }
        }
        private global::System.String _ThreeLetterWindowsLanguageName;
        partial void OnThreeLetterWindowsLanguageNameChanging(global::System.String value);
        partial void OnThreeLetterWindowsLanguageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlyClient
        {
            get
            {
                return _OnlyClient;
            }
            set
            {
                OnOnlyClientChanging(value);
                ReportPropertyChanging("OnlyClient");
                _OnlyClient = StructuralObject.SetValidValue(value, "OnlyClient");
                ReportPropertyChanged("OnlyClient");
                OnOnlyClientChanged();
            }
        }
        private global::System.Boolean _OnlyClient;
        partial void OnOnlyClientChanging(global::System.Boolean value);
        partial void OnOnlyClientChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="LogException")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogException : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogException object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="buildID">Initial value of the BuildID property.</param>
        /// <param name="exceptionContent">Initial value of the ExceptionContent property.</param>
        /// <param name="insertTime">Initial value of the InsertTime property.</param>
        /// <param name="lastModifyTime">Initial value of the LastModifyTime property.</param>
        /// <param name="exceptionCount">Initial value of the ExceptionCount property.</param>
        public static LogException CreateLogException(global::System.Int32 logID, global::System.Int32 clientID, global::System.Int32 buildID, global::System.String exceptionContent, global::System.DateTime insertTime, global::System.DateTime lastModifyTime, global::System.Int32 exceptionCount)
        {
            LogException logException = new LogException();
            logException.LogID = logID;
            logException.ClientID = clientID;
            logException.BuildID = buildID;
            logException.ExceptionContent = exceptionContent;
            logException.InsertTime = insertTime;
            logException.LastModifyTime = lastModifyTime;
            logException.ExceptionCount = exceptionCount;
            return logException;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value, "LogID");
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildID
        {
            get
            {
                return _BuildID;
            }
            set
            {
                OnBuildIDChanging(value);
                ReportPropertyChanging("BuildID");
                _BuildID = StructuralObject.SetValidValue(value, "BuildID");
                ReportPropertyChanged("BuildID");
                OnBuildIDChanged();
            }
        }
        private global::System.Int32 _BuildID;
        partial void OnBuildIDChanging(global::System.Int32 value);
        partial void OnBuildIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExceptionContent
        {
            get
            {
                return _ExceptionContent;
            }
            set
            {
                OnExceptionContentChanging(value);
                ReportPropertyChanging("ExceptionContent");
                _ExceptionContent = StructuralObject.SetValidValue(value, false, "ExceptionContent");
                ReportPropertyChanged("ExceptionContent");
                OnExceptionContentChanged();
            }
        }
        private global::System.String _ExceptionContent;
        partial void OnExceptionContentChanging(global::System.String value);
        partial void OnExceptionContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertTime
        {
            get
            {
                return _InsertTime;
            }
            set
            {
                OnInsertTimeChanging(value);
                ReportPropertyChanging("InsertTime");
                _InsertTime = StructuralObject.SetValidValue(value, "InsertTime");
                ReportPropertyChanged("InsertTime");
                OnInsertTimeChanged();
            }
        }
        private global::System.DateTime _InsertTime;
        partial void OnInsertTimeChanging(global::System.DateTime value);
        partial void OnInsertTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value, "LastModifyTime");
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private global::System.DateTime _LastModifyTime;
        partial void OnLastModifyTimeChanging(global::System.DateTime value);
        partial void OnLastModifyTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExceptionCount
        {
            get
            {
                return _ExceptionCount;
            }
            set
            {
                OnExceptionCountChanging(value);
                ReportPropertyChanging("ExceptionCount");
                _ExceptionCount = StructuralObject.SetValidValue(value, "ExceptionCount");
                ReportPropertyChanged("ExceptionCount");
                OnExceptionCountChanged();
            }
        }
        private global::System.Int32 _ExceptionCount;
        partial void OnExceptionCountChanging(global::System.Int32 value);
        partial void OnExceptionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Accessories
        {
            get
            {
                return _Accessories;
            }
            set
            {
                OnAccessoriesChanging(value);
                ReportPropertyChanging("Accessories");
                _Accessories = StructuralObject.SetValidValue(value, true, "Accessories");
                ReportPropertyChanged("Accessories");
                OnAccessoriesChanged();
            }
        }
        private global::System.String _Accessories;
        partial void OnAccessoriesChanging(global::System.String value);
        partial void OnAccessoriesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_LogException_BuildInfo", "BuildInfo")]
        public BuildInfo BuildInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildInfo>("SulpHurModel.FK_LogException_BuildInfo", "BuildInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildInfo>("SulpHurModel.FK_LogException_BuildInfo", "BuildInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildInfo> BuildInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildInfo>("SulpHurModel.FK_LogException_BuildInfo", "BuildInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildInfo>("SulpHurModel.FK_LogException_BuildInfo", "BuildInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_LogException_Clients", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("SulpHurModel.FK_LogException_Clients", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("SulpHurModel.FK_LogException_Clients", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("SulpHurModel.FK_LogException_Clients", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("SulpHurModel.FK_LogException_Clients", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="resultID">Initial value of the ResultID property.</param>
        /// <param name="contentID">Initial value of the ContentID property.</param>
        /// <param name="ruleID">Initial value of the RuleID property.</param>
        /// <param name="resultType">Initial value of the ResultType property.</param>
        /// <param name="resultLog">Initial value of the ResultLog property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Result CreateResult(global::System.Int32 resultID, global::System.Int32 contentID, global::System.Int32 ruleID, global::System.String resultType, global::System.String resultLog, global::System.DateTime createDate)
        {
            Result result = new Result();
            result.ResultID = resultID;
            result.ContentID = contentID;
            result.RuleID = ruleID;
            result.ResultType = resultType;
            result.ResultLog = resultLog;
            result.CreateDate = createDate;
            return result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultID
        {
            get
            {
                return _ResultID;
            }
            set
            {
                if (_ResultID != value)
                {
                    OnResultIDChanging(value);
                    ReportPropertyChanging("ResultID");
                    _ResultID = StructuralObject.SetValidValue(value, "ResultID");
                    ReportPropertyChanged("ResultID");
                    OnResultIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultID;
        partial void OnResultIDChanging(global::System.Int32 value);
        partial void OnResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value, "ContentID");
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelatedControls
        {
            get
            {
                return _RelatedControls;
            }
            set
            {
                OnRelatedControlsChanging(value);
                ReportPropertyChanging("RelatedControls");
                _RelatedControls = StructuralObject.SetValidValue(value, true, "RelatedControls");
                ReportPropertyChanged("RelatedControls");
                OnRelatedControlsChanged();
            }
        }
        private global::System.String _RelatedControls;
        partial void OnRelatedControlsChanging(global::System.String value);
        partial void OnRelatedControlsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                OnRuleIDChanging(value);
                ReportPropertyChanging("RuleID");
                _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                ReportPropertyChanged("RuleID");
                OnRuleIDChanged();
            }
        }
        private global::System.Int32 _RuleID;
        partial void OnRuleIDChanging(global::System.Int32 value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultType
        {
            get
            {
                return _ResultType;
            }
            set
            {
                OnResultTypeChanging(value);
                ReportPropertyChanging("ResultType");
                _ResultType = StructuralObject.SetValidValue(value, false, "ResultType");
                ReportPropertyChanged("ResultType");
                OnResultTypeChanged();
            }
        }
        private global::System.String _ResultType;
        partial void OnResultTypeChanging(global::System.String value);
        partial void OnResultTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ResultImage
        {
            get
            {
                return StructuralObject.GetValidValue(_ResultImage);
            }
            set
            {
                OnResultImageChanging(value);
                ReportPropertyChanging("ResultImage");
                _ResultImage = StructuralObject.SetValidValue(value, true, "ResultImage");
                ReportPropertyChanged("ResultImage");
                OnResultImageChanged();
            }
        }
        private global::System.Byte[] _ResultImage;
        partial void OnResultImageChanging(global::System.Byte[] value);
        partial void OnResultImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultLog
        {
            get
            {
                return _ResultLog;
            }
            set
            {
                OnResultLogChanging(value);
                ReportPropertyChanging("ResultLog");
                _ResultLog = StructuralObject.SetValidValue(value, false, "ResultLog");
                ReportPropertyChanged("ResultLog");
                OnResultLogChanged();
            }
        }
        private global::System.String _ResultLog;
        partial void OnResultLogChanging(global::System.String value);
        partial void OnResultLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReviewFlag
        {
            get
            {
                return _ReviewFlag;
            }
            set
            {
                OnReviewFlagChanging(value);
                ReportPropertyChanging("ReviewFlag");
                _ReviewFlag = StructuralObject.SetValidValue(value, "ReviewFlag");
                ReportPropertyChanged("ReviewFlag");
                OnReviewFlagChanged();
            }
        }
        private Nullable<global::System.Int32> _ReviewFlag;
        partial void OnReviewFlagChanging(Nullable<global::System.Int32> value);
        partial void OnReviewFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReviewLog
        {
            get
            {
                return _ReviewLog;
            }
            set
            {
                OnReviewLogChanging(value);
                ReportPropertyChanging("ReviewLog");
                _ReviewLog = StructuralObject.SetValidValue(value, true, "ReviewLog");
                ReportPropertyChanged("ReviewLog");
                OnReviewLogChanged();
            }
        }
        private global::System.String _ReviewLog;
        partial void OnReviewLogChanging(global::System.String value);
        partial void OnReviewLogChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_Results_Rules", "Rule")]
        public Rule Rule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("SulpHurModel.FK_Results_Rules", "Rule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("SulpHurModel.FK_Results_Rules", "Rule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rule> RuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("SulpHurModel.FK_Results_Rules", "Rule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rule>("SulpHurModel.FK_Results_Rules", "Rule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_Results_UIContents", "UIContent")]
        public UIContent UIContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_Results_UIContents", "UIContent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_Results_UIContents", "UIContent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UIContent> UIContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_Results_UIContents", "UIContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UIContent>("SulpHurModel.FK_Results_UIContents", "UIContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="Rule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rule object.
        /// </summary>
        /// <param name="ruleID">Initial value of the RuleID property.</param>
        /// <param name="ruleName">Initial value of the RuleName property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Rule CreateRule(global::System.Int32 ruleID, global::System.String ruleName, global::System.Boolean isEnabled, global::System.DateTime dateCreated)
        {
            Rule rule = new Rule();
            rule.RuleID = ruleID;
            rule.RuleName = ruleName;
            rule.IsEnabled = isEnabled;
            rule.DateCreated = dateCreated;
            return rule;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                if (_RuleID != value)
                {
                    OnRuleIDChanging(value);
                    ReportPropertyChanging("RuleID");
                    _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                    ReportPropertyChanged("RuleID");
                    OnRuleIDChanged();
                }
            }
        }
        private global::System.Int32 _RuleID;
        partial void OnRuleIDChanging(global::System.Int32 value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RuleName
        {
            get
            {
                return _RuleName;
            }
            set
            {
                OnRuleNameChanging(value);
                ReportPropertyChanging("RuleName");
                _RuleName = StructuralObject.SetValidValue(value, false, "RuleName");
                ReportPropertyChanged("RuleName");
                OnRuleNameChanged();
            }
        }
        private global::System.String _RuleName;
        partial void OnRuleNameChanging(global::System.String value);
        partial void OnRuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RulePath
        {
            get
            {
                return _RulePath;
            }
            set
            {
                OnRulePathChanging(value);
                ReportPropertyChanging("RulePath");
                _RulePath = StructuralObject.SetValidValue(value, true, "RulePath");
                ReportPropertyChanged("RulePath");
                OnRulePathChanged();
            }
        }
        private global::System.String _RulePath;
        partial void OnRulePathChanging(global::System.String value);
        partial void OnRulePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleDesc
        {
            get
            {
                return _RuleDesc;
            }
            set
            {
                OnRuleDescChanging(value);
                ReportPropertyChanging("RuleDesc");
                _RuleDesc = StructuralObject.SetValidValue(value, true, "RuleDesc");
                ReportPropertyChanged("RuleDesc");
                OnRuleDescChanged();
            }
        }
        private global::System.String _RuleDesc;
        partial void OnRuleDescChanging(global::System.String value);
        partial void OnRuleDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyInfo
        {
            get
            {
                return _AssemblyInfo;
            }
            set
            {
                OnAssemblyInfoChanging(value);
                ReportPropertyChanging("AssemblyInfo");
                _AssemblyInfo = StructuralObject.SetValidValue(value, true, "AssemblyInfo");
                ReportPropertyChanged("AssemblyInfo");
                OnAssemblyInfoChanged();
            }
        }
        private global::System.String _AssemblyInfo;
        partial void OnAssemblyInfoChanging(global::System.String value);
        partial void OnAssemblyInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsObsoluted
        {
            get
            {
                return _IsObsoluted;
            }
            set
            {
                OnIsObsolutedChanging(value);
                ReportPropertyChanging("IsObsoluted");
                _IsObsoluted = StructuralObject.SetValidValue(value, "IsObsoluted");
                ReportPropertyChanged("IsObsoluted");
                OnIsObsolutedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsObsoluted;
        partial void OnIsObsolutedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsObsolutedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_Results_Rules", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("SulpHurModel.FK_Results_Rules", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("SulpHurModel.FK_Results_Rules", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_RuleStatus_Rules", "RuleStatu")]
        public EntityCollection<RuleStatu> RuleStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleStatu>("SulpHurModel.FK_RuleStatus_Rules", "RuleStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleStatu>("SulpHurModel.FK_RuleStatus_Rules", "RuleStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="RuleStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleStatu object.
        /// </summary>
        /// <param name="contentID">Initial value of the ContentID property.</param>
        /// <param name="ruleID">Initial value of the RuleID property.</param>
        /// <param name="isChecked">Initial value of the IsChecked property.</param>
        /// <param name="dateUpdated">Initial value of the DateUpdated property.</param>
        public static RuleStatu CreateRuleStatu(global::System.Int32 contentID, global::System.Int32 ruleID, global::System.Boolean isChecked, global::System.DateTime dateUpdated)
        {
            RuleStatu ruleStatu = new RuleStatu();
            ruleStatu.ContentID = contentID;
            ruleStatu.RuleID = ruleID;
            ruleStatu.IsChecked = isChecked;
            ruleStatu.DateUpdated = dateUpdated;
            return ruleStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                if (_ContentID != value)
                {
                    OnContentIDChanging(value);
                    ReportPropertyChanging("ContentID");
                    _ContentID = StructuralObject.SetValidValue(value, "ContentID");
                    ReportPropertyChanged("ContentID");
                    OnContentIDChanged();
                }
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                if (_RuleID != value)
                {
                    OnRuleIDChanging(value);
                    ReportPropertyChanging("RuleID");
                    _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                    ReportPropertyChanged("RuleID");
                    OnRuleIDChanged();
                }
            }
        }
        private global::System.Int32 _RuleID;
        partial void OnRuleIDChanging(global::System.Int32 value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RuleStatus
        {
            get
            {
                return _RuleStatus;
            }
            set
            {
                OnRuleStatusChanging(value);
                ReportPropertyChanging("RuleStatus");
                _RuleStatus = StructuralObject.SetValidValue(value, "RuleStatus");
                ReportPropertyChanged("RuleStatus");
                OnRuleStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _RuleStatus;
        partial void OnRuleStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnRuleStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsChecked
        {
            get
            {
                return _IsChecked;
            }
            set
            {
                OnIsCheckedChanging(value);
                ReportPropertyChanging("IsChecked");
                _IsChecked = StructuralObject.SetValidValue(value, "IsChecked");
                ReportPropertyChanged("IsChecked");
                OnIsCheckedChanged();
            }
        }
        private global::System.Boolean _IsChecked;
        partial void OnIsCheckedChanging(global::System.Boolean value);
        partial void OnIsCheckedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value, "DateUpdated");
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private global::System.DateTime _DateUpdated;
        partial void OnDateUpdatedChanging(global::System.DateTime value);
        partial void OnDateUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_RuleStatus_Rules", "Rule")]
        public Rule Rule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("SulpHurModel.FK_RuleStatus_Rules", "Rule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("SulpHurModel.FK_RuleStatus_Rules", "Rule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rule> RuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("SulpHurModel.FK_RuleStatus_Rules", "Rule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rule>("SulpHurModel.FK_RuleStatus_Rules", "Rule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_RuleStatus_UIContents", "UIContent")]
        public UIContent UIContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_RuleStatus_UIContents", "UIContent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_RuleStatus_UIContents", "UIContent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UIContent> UIContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UIContent>("SulpHurModel.FK_RuleStatus_UIContents", "UIContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UIContent>("SulpHurModel.FK_RuleStatus_UIContents", "UIContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="surface")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class surface : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new surface object.
        /// </summary>
        /// <param name="s_id">Initial value of the s_id property.</param>
        public static surface Createsurface(global::System.Int32 s_id)
        {
            surface surface = new surface();
            surface.s_id = s_id;
            return surface;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 s_id
        {
            get
            {
                return _s_id;
            }
            set
            {
                if (_s_id != value)
                {
                    Ons_idChanging(value);
                    ReportPropertyChanging("s_id");
                    _s_id = StructuralObject.SetValidValue(value, "s_id");
                    ReportPropertyChanged("s_id");
                    Ons_idChanged();
                }
            }
        }
        private global::System.Int32 _s_id;
        partial void Ons_idChanging(global::System.Int32 value);
        partial void Ons_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String class_name
        {
            get
            {
                return _class_name;
            }
            set
            {
                Onclass_nameChanging(value);
                ReportPropertyChanging("class_name");
                _class_name = StructuralObject.SetValidValue(value, true, "class_name");
                ReportPropertyChanged("class_name");
                Onclass_nameChanged();
            }
        }
        private global::System.String _class_name;
        partial void Onclass_nameChanging(global::System.String value);
        partial void Onclass_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String assembly_name
        {
            get
            {
                return _assembly_name;
            }
            set
            {
                Onassembly_nameChanging(value);
                ReportPropertyChanging("assembly_name");
                _assembly_name = StructuralObject.SetValidValue(value, true, "assembly_name");
                ReportPropertyChanged("assembly_name");
                Onassembly_nameChanged();
            }
        }
        private global::System.String _assembly_name;
        partial void Onassembly_nameChanging(global::System.String value);
        partial void Onassembly_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gid
        {
            get
            {
                return _gid;
            }
            set
            {
                OngidChanging(value);
                ReportPropertyChanging("gid");
                _gid = StructuralObject.SetValidValue(value, true, "gid");
                ReportPropertyChanged("gid");
                OngidChanged();
            }
        }
        private global::System.String _gid;
        partial void OngidChanging(global::System.String value);
        partial void OngidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_bug_surface_surfaces", "bug_surface")]
        public EntityCollection<bug_surface> bug_surface
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<bug_surface>("SulpHurModel.FK_bug_surface_surfaces", "bug_surface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<bug_surface>("SulpHurModel.FK_bug_surface_surfaces", "bug_surface", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SulpHurModel", Name="UIContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UIContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UIContent object.
        /// </summary>
        /// <param name="contentID">Initial value of the ContentID property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="buildID">Initial value of the BuildID property.</param>
        /// <param name="uIContent1">Initial value of the UIContent1 property.</param>
        /// <param name="uIScreenShot">Initial value of the UIScreenShot property.</param>
        /// <param name="isWebUI">Initial value of the IsWebUI property.</param>
        /// <param name="dateUploaded">Initial value of the DateUploaded property.</param>
        public static UIContent CreateUIContent(global::System.Int32 contentID, global::System.Int32 clientID, global::System.Int32 buildID, global::System.String uIContent1, global::System.Byte[] uIScreenShot, global::System.Boolean isWebUI, global::System.DateTime dateUploaded)
        {
            UIContent uIContent = new UIContent();
            uIContent.ContentID = contentID;
            uIContent.ClientID = clientID;
            uIContent.BuildID = buildID;
            uIContent.UIContent1 = uIContent1;
            uIContent.UIScreenShot = uIScreenShot;
            uIContent.IsWebUI = isWebUI;
            uIContent.DateUploaded = dateUploaded;
            return uIContent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                if (_ContentID != value)
                {
                    OnContentIDChanging(value);
                    ReportPropertyChanging("ContentID");
                    _ContentID = StructuralObject.SetValidValue(value, "ContentID");
                    ReportPropertyChanged("ContentID");
                    OnContentIDChanged();
                }
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                OnGUIDChanging(value);
                ReportPropertyChanging("GUID");
                _GUID = StructuralObject.SetValidValue(value, "GUID");
                ReportPropertyChanged("GUID");
                OnGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _GUID;
        partial void OnGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildID
        {
            get
            {
                return _BuildID;
            }
            set
            {
                OnBuildIDChanging(value);
                ReportPropertyChanging("BuildID");
                _BuildID = StructuralObject.SetValidValue(value, "BuildID");
                ReportPropertyChanged("BuildID");
                OnBuildIDChanged();
            }
        }
        private global::System.Int32 _BuildID;
        partial void OnBuildIDChanging(global::System.Int32 value);
        partial void OnBuildIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UIName
        {
            get
            {
                return _UIName;
            }
            set
            {
                OnUINameChanging(value);
                ReportPropertyChanging("UIName");
                _UIName = StructuralObject.SetValidValue(value, true, "UIName");
                ReportPropertyChanged("UIName");
                OnUINameChanged();
            }
        }
        private global::System.String _UIName;
        partial void OnUINameChanging(global::System.String value);
        partial void OnUINameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UIContent1
        {
            get
            {
                return _UIContent1;
            }
            set
            {
                OnUIContent1Changing(value);
                ReportPropertyChanging("UIContent1");
                _UIContent1 = StructuralObject.SetValidValue(value, false, "UIContent1");
                ReportPropertyChanged("UIContent1");
                OnUIContent1Changed();
            }
        }
        private global::System.String _UIContent1;
        partial void OnUIContent1Changing(global::System.String value);
        partial void OnUIContent1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] UIScreenShot
        {
            get
            {
                return StructuralObject.GetValidValue(_UIScreenShot);
            }
            set
            {
                OnUIScreenShotChanging(value);
                ReportPropertyChanging("UIScreenShot");
                _UIScreenShot = StructuralObject.SetValidValue(value, false, "UIScreenShot");
                ReportPropertyChanged("UIScreenShot");
                OnUIScreenShotChanged();
            }
        }
        private global::System.Byte[] _UIScreenShot;
        partial void OnUIScreenShotChanging(global::System.Byte[] value);
        partial void OnUIScreenShotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWebUI
        {
            get
            {
                return _IsWebUI;
            }
            set
            {
                OnIsWebUIChanging(value);
                ReportPropertyChanging("IsWebUI");
                _IsWebUI = StructuralObject.SetValidValue(value, "IsWebUI");
                ReportPropertyChanged("IsWebUI");
                OnIsWebUIChanged();
            }
        }
        private global::System.Boolean _IsWebUI;
        partial void OnIsWebUIChanging(global::System.Boolean value);
        partial void OnIsWebUIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateUploaded
        {
            get
            {
                return _DateUploaded;
            }
            set
            {
                OnDateUploadedChanging(value);
                ReportPropertyChanging("DateUploaded");
                _DateUploaded = StructuralObject.SetValidValue(value, "DateUploaded");
                ReportPropertyChanged("DateUploaded");
                OnDateUploadedChanged();
            }
        }
        private global::System.DateTime _DateUploaded;
        partial void OnDateUploadedChanging(global::System.DateTime value);
        partial void OnDateUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TraceID
        {
            get
            {
                return _TraceID;
            }
            set
            {
                OnTraceIDChanging(value);
                ReportPropertyChanging("TraceID");
                _TraceID = StructuralObject.SetValidValue(value, "TraceID");
                ReportPropertyChanged("TraceID");
                OnTraceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TraceID;
        partial void OnTraceIDChanging(Nullable<global::System.Int32> value);
        partial void OnTraceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Reserve1
        {
            get
            {
                return _Reserve1;
            }
            set
            {
                OnReserve1Changing(value);
                ReportPropertyChanging("Reserve1");
                _Reserve1 = StructuralObject.SetValidValue(value, "Reserve1");
                ReportPropertyChanged("Reserve1");
                OnReserve1Changed();
            }
        }
        private Nullable<global::System.Int32> _Reserve1;
        partial void OnReserve1Changing(Nullable<global::System.Int32> value);
        partial void OnReserve1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reserve2
        {
            get
            {
                return _Reserve2;
            }
            set
            {
                OnReserve2Changing(value);
                ReportPropertyChanging("Reserve2");
                _Reserve2 = StructuralObject.SetValidValue(value, true, "Reserve2");
                ReportPropertyChanged("Reserve2");
                OnReserve2Changed();
            }
        }
        private global::System.String _Reserve2;
        partial void OnReserve2Changing(global::System.String value);
        partial void OnReserve2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reserve3
        {
            get
            {
                return _Reserve3;
            }
            set
            {
                OnReserve3Changing(value);
                ReportPropertyChanging("Reserve3");
                _Reserve3 = StructuralObject.SetValidValue(value, true, "Reserve3");
                ReportPropertyChanged("Reserve3");
                OnReserve3Changed();
            }
        }
        private global::System.String _Reserve3;
        partial void OnReserve3Changing(global::System.String value);
        partial void OnReserve3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reserve4
        {
            get
            {
                return _Reserve4;
            }
            set
            {
                OnReserve4Changing(value);
                ReportPropertyChanging("Reserve4");
                _Reserve4 = StructuralObject.SetValidValue(value, true, "Reserve4");
                ReportPropertyChanged("Reserve4");
                OnReserve4Changed();
            }
        }
        private global::System.String _Reserve4;
        partial void OnReserve4Changing(global::System.String value);
        partial void OnReserve4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reserve5
        {
            get
            {
                return _Reserve5;
            }
            set
            {
                OnReserve5Changing(value);
                ReportPropertyChanging("Reserve5");
                _Reserve5 = StructuralObject.SetValidValue(value, true, "Reserve5");
                ReportPropertyChanged("Reserve5");
                OnReserve5Changed();
            }
        }
        private global::System.String _Reserve5;
        partial void OnReserve5Changing(global::System.String value);
        partial void OnReserve5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LaunchedFrom
        {
            get
            {
                return _LaunchedFrom;
            }
            set
            {
                OnLaunchedFromChanging(value);
                ReportPropertyChanging("LaunchedFrom");
                _LaunchedFrom = StructuralObject.SetValidValue(value, true, "LaunchedFrom");
                ReportPropertyChanged("LaunchedFrom");
                OnLaunchedFromChanged();
            }
        }
        private global::System.String _LaunchedFrom;
        partial void OnLaunchedFromChanging(global::System.String value);
        partial void OnLaunchedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WindowHierarchy
        {
            get
            {
                return _WindowHierarchy;
            }
            set
            {
                OnWindowHierarchyChanging(value);
                ReportPropertyChanging("WindowHierarchy");
                _WindowHierarchy = StructuralObject.SetValidValue(value, true, "WindowHierarchy");
                ReportPropertyChanged("WindowHierarchy");
                OnWindowHierarchyChanged();
            }
        }
        private global::System.String _WindowHierarchy;
        partial void OnWindowHierarchyChanging(global::System.String value);
        partial void OnWindowHierarchyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_AssemblyLink_UIContents", "AssemblyLink")]
        public EntityCollection<AssemblyLink> AssemblyLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssemblyLink>("SulpHurModel.FK_AssemblyLink_UIContents", "AssemblyLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssemblyLink>("SulpHurModel.FK_AssemblyLink_UIContents", "AssemblyLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_BugLink_UIContents", "BugLink")]
        public EntityCollection<BugLink> BugLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BugLink>("SulpHurModel.FK_BugLink_UIContents", "BugLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BugLink>("SulpHurModel.FK_BugLink_UIContents", "BugLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_UIContents_BuildInfo", "BuildInfo")]
        public BuildInfo BuildInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildInfo>("SulpHurModel.FK_UIContents_BuildInfo", "BuildInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildInfo>("SulpHurModel.FK_UIContents_BuildInfo", "BuildInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildInfo> BuildInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildInfo>("SulpHurModel.FK_UIContents_BuildInfo", "BuildInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildInfo>("SulpHurModel.FK_UIContents_BuildInfo", "BuildInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_UIContents_Clients", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("SulpHurModel.FK_UIContents_Clients", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("SulpHurModel.FK_UIContents_Clients", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("SulpHurModel.FK_UIContents_Clients", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("SulpHurModel.FK_UIContents_Clients", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_Results_UIContents", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("SulpHurModel.FK_Results_UIContents", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("SulpHurModel.FK_Results_UIContents", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SulpHurModel", "FK_RuleStatus_UIContents", "RuleStatu")]
        public EntityCollection<RuleStatu> RuleStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleStatu>("SulpHurModel.FK_RuleStatus_UIContents", "RuleStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleStatu>("SulpHurModel.FK_RuleStatus_UIContents", "RuleStatu", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
